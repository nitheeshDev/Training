{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet RegistrationFormComponent = class RegistrationFormComponent {\n  constructor(formBuilder) {\n    this.formBuilder = formBuilder;\n    this.registrationForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required],\n      phoneNumber: ['', Validators.required],\n      address: [''],\n      city: [''],\n      state: [''],\n      zipCode: ['']\n    });\n  }\n  onSubmit() {\n    if (this.registrationForm.valid) {\n      // Handle form submission, e.g., send data to the server\n      console.log(this.registrationForm.value);\n    } else {\n      // Form is invalid, show error messages\n      // You can access form controls like this: this.registrationForm.get('controlName')\n    }\n  }\n};\nRegistrationFormComponent = __decorate([Component({\n  selector: 'app-counter-component',\n  templateUrl: './counter.component.html'\n})\n//export class CounterComponent {\n//  public currentCount = 0;\n//  public incrementCounter() {\n//    this.currentCount++;\n//  }\n//}\n], RegistrationFormComponent);\nexport { RegistrationFormComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAc5D,IAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAGpCC,YAAoBC,WAAwB;IAAxB,gBAAW,GAAXA,WAAW;IAC7B,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MAC7CC,SAAS,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MACpCC,QAAQ,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MACnCE,KAAK,EAAE,CAAC,EAAE,EAAE,CAACT,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC9DC,eAAe,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACO,QAAQ,CAAC;MAC1CM,WAAW,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACO,QAAQ,CAAC;MACtCO,OAAO,EAAE,CAAC,EAAE,CAAC;MACbC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,OAAO,EAAE,CAAC,EAAE;KACb,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,IAAI,CAACd,gBAAgB,CAACe,KAAK,EAAE;MAC/B;MACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,gBAAgB,CAACkB,KAAK,CAAC;KACzC,MAAM;MACL;MACA;IAAA;EAEJ;CACD;AA3BYrB,yBAAyB,eAZrCF,SAAS,CAAC;EACTwB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE;CACd;AACD;AACA;AAEA;AACA;AACA;AACA;AAAA,GAEavB,yBAAyB,CA2BrC;SA3BYA,yBAAyB","names":["Component","Validators","RegistrationFormComponent","constructor","formBuilder","registrationForm","group","firstName","required","lastName","email","password","minLength","confirmPassword","phoneNumber","address","city","state","zipCode","onSubmit","valid","console","log","value","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\nitheesh.arumugam\\source\\repos\\angular_Bank\\angular_Bank\\ClientApp\\src\\app\\counter\\counter.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-counter-component',\r\n  templateUrl: './counter.component.html'\r\n})\r\n//export class CounterComponent {\r\n//  public currentCount = 0;\r\n\r\n//  public incrementCounter() {\r\n//    this.currentCount++;\r\n//  }\r\n//}\r\n\r\nexport class RegistrationFormComponent {\r\n  registrationForm: FormGroup;\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.registrationForm = this.formBuilder.group({\r\n      firstName: ['', Validators.required],\r\n      lastName: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required, Validators.minLength(8)]],\r\n      confirmPassword: ['', Validators.required],\r\n      phoneNumber: ['', Validators.required],\r\n      address: [''],\r\n      city: [''],\r\n      state: [''],\r\n      zipCode: ['']\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.registrationForm.valid) {\r\n      // Handle form submission, e.g., send data to the server\r\n      console.log(this.registrationForm.value);\r\n    } else {\r\n      // Form is invalid, show error messages\r\n      // You can access form controls like this: this.registrationForm.get('controlName')\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}